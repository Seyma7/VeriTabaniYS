<?php

Class ModelImage extends Controller{
	
	public function resize ( $filename = false, $width = 0 , $height = 0) {
	
		if ( !$filename || !file_exists(DIR_IMAGE . $filename) ) $filename = 'preview/no_preview.png';
		
		if ( !file_exists(DIR_IMAGE . $filename) ) {

			return;

		}

		$file	= str_replace(strtolower(strrchr($filename, '.')), '', basename($filename));

		$image 	= str_replace($file, $file . '-' . $this->_resized_name($width, $height), $filename);
		
		if ( file_exists(DIR_IMAGE . $image) ) {

			return HTTP_IMAGE . $image;

		}

		$info = getimagesize(DIR_IMAGE . $filename);
		
		$info = array(
			'width'  => $info[0],
			'height' => $info[1],
			'bits'   => $info['bits'],
			'mime'   => $info['mime']
		);

		$mime = $info['mime'];
		
		if ($mime == 'image/gif') {
			$o_image = imagecreatefromgif(DIR_IMAGE . $filename);
		} elseif ($mime == 'image/png') {
			$o_image = imagecreatefrompng(DIR_IMAGE . $filename);
		} elseif ($mime == 'image/jpeg') {
			$o_image = imagecreatefromjpeg(DIR_IMAGE . $filename);
		}	
		
		$_width = $width;
		$_height= $height;
		
		if($height == 0){
			if($width == 0) $width = 200;
			$_height = $height = intval(($width * $info['height']) / $info['width']);
		} else if($width == 0){	
			$_width = $width = intval(($height * $info['width']) / $info['height']);
		} else {
		
			$scaleMax 	= max($width / $info['width'], $height / $info['height']);
			$scaleMin 	= min($width / $info['width'], $height / $info['height']);
			
			$_width 	= intval($info['width'] * $scaleMax);
			$_height 	= intval($info['height'] * $scaleMax);
		}
		
		$new_image = imagecreatetruecolor($width, $height);
		
		if($_width > $width){
			$x_pos = (($width - $_width) / 2);
		}	
		
		if($_height > $height){
			$y_pos = (($height - $_height) / 2);
		}		
		
		imagecopyresampled($new_image, $o_image, (isset($x_pos) ? $x_pos : 0), (isset($y_pos) ? $y_pos : 0), 0, 0, $_width, $_height, $info['width'], $info['height']);		
		
		imagejpeg($new_image, DIR_IMAGE  . $image);		
	
		return HTTP_IMAGE . $image;
	
	}	
	
	private function _resized_name($width = 0, $height = 0){
	
		return ((int)$width && (int)$width > 0 ? (int)$width : 'autowidth') . 'X' . ((int)$height && (int)$height > 0 ? (int)$height : 'autoheight');
	
	}		
	
}

?>